let htmlCodeDisplay=document.getElementById("htmlCodeContent"),htmlPreviewDisplay=document.getElementById("htmlPreviewDisplay"),htmlFullCode='<!DOCTYPE html>\n<html>\n<head>\n    <meta charset="UTF-8">\n    <title>Modern UI Component</title>\n    <style>\n        * {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n        }\n        body {\n            font-family: \'Inter\', sans-serif;\n            background-color: #f5f5f5;\n        }\n        .card {\n            background: white;\n            border-radius: 12px;\n            box-shadow: 0 4px 20px rgba(0,0,0,0.08);\n            padding: 24px;\n            max-width: 400px;\n            margin: 20px auto;\n        }\n        .card-header {\n            margin-bottom: 16px;\n        }\n        .card-title {\n            font-size: 1.5rem;\n            font-weight: 600;\n            color: #111;\n        }\n        .card-subtitle {\n            color: #666;\n            font-size: 0.9rem;\n            margin-top: 4px;\n        }\n        .stats {\n            display: flex;\n            gap: 16px;\n        }\n        .stat-item {\n            flex: 1;\n            background: #f8f9fa;\n            border-radius: 8px;\n            padding: 12px;\n            text-align: center;\n        }\n        .stat-value {\n            font-size: 1.5rem;\n            font-weight: 700;\n            color: #3a86ff;\n        }\n        .stat-label {\n            font-size: 0.75rem;\n            color: #666;\n            margin-top: 4px;\n        }\n        .action-btn {\n            background: #3a86ff;\n            color: white;\n            border: none;\n            border-radius: 8px;\n            padding: 12px 20px;\n            font-size: 0.9rem;\n            font-weight: 500;\n            width: 100%;\n            margin-top: 20px;\n            cursor: pointer;\n            transition: background 0.3s;\n        }\n        .action-btn:hover {\n            background: #2878fb;\n        }\n    </style>\n</head>\n<body>\n    <div class="card">\n        <div class="card-header">\n            <h2 class="card-title">Project Overview</h2>\n            <p class="card-subtitle">Weekly statistics</p>\n        </div>\n        \n        <div class="stats">\n            <div class="stat-item">\n                <div class="stat-value">24</div>\n                <div class="stat-label">Tasks</div>\n            </div>\n            <div class="stat-item">\n                <div class="stat-value">8</div>\n                <div class="stat-label">Active</div>\n            </div>\n            <div class="stat-item">\n                <div class="stat-value">16</div>\n                <div class="stat-label">Completed</div>\n            </div>\n        </div>\n        \n        <button class="action-btn">View Details</button>\n    </div>\n</body>\n</html>',jsCodeDisplay=document.getElementById("jsCodeContent"),jsPreviewDisplay=document.getElementById("jsPreviewDisplay"),jsFullCode="// Project Task Manager\nclass TaskManager {\n    constructor() {\n        this.tasks = [];\n        this.taskId = 1;\n    }\n    \n    addTask(title, priority = 'medium') {\n        const newTask = {\n            id: this.taskId++,\n            title,\n            priority,\n            status: 'active',\n            createdAt: new Date(),\n            completedAt: null\n        };\n        \n        this.tasks.push(newTask);\n        console.log(`Task created: '${title}' (ID: ${newTask.id})`);\n        return newTask;\n    }\n    \n    completeTask(id) {\n        const task = this.tasks.find(task => task.id === id);\n        \n        if (task) {\n            task.status = 'completed';\n            task.completedAt = new Date();\n            console.log(`Task completed: '${task.title}' (ID: ${id})`);\n            return true;\n        } else {\n            console.error(`Task with ID ${id} not found`);\n            return false;\n        }\n    }\n    \n    deleteTask(id) {\n        const initialLength = this.tasks.length;\n        this.tasks = this.tasks.filter(task => task.id !== id);\n        \n        if (this.tasks.length < initialLength) {\n            console.log(`Task with ID ${id} deleted`);\n            return true;\n        } else {\n            console.error(`Task with ID ${id} not found`);\n            return false;\n        }\n    }\n    \n    getTasksByStatus(status) {\n        return this.tasks.filter(task => task.status === status);\n    }\n    \n    getStats() {\n        const stats = {\n            total: this.tasks.length,\n            active: this.getTasksByStatus('active').length,\n            completed: this.getTasksByStatus('completed').length\n        };\n        \n        console.log('Current stats:', stats);\n        return stats;\n    }\n}\n\n// Initialize and demonstrate the TaskManager\nconst projectTasks = new TaskManager();\n\n// Add some tasks\nprojectTasks.addTask('Set up project repository', 'high');\nprojectTasks.addTask('Create wireframes', 'high');\nprojectTasks.addTask('Design database schema', 'medium');\nprojectTasks.addTask('Write API documentation', 'low');\n\n// Complete some tasks\nprojectTasks.completeTask(1);\nprojectTasks.completeTask(2);\n\n// Get current stats\nprojectTasks.getStats();",htmlIndex=0,jsIndex=0,htmlTypedCode="",jsTypedCode="",totalAnimationTime=8e3,htmlTypingSpeed=totalAnimationTime/htmlFullCode.length,jsTypingSpeed=totalAnimationTime/jsFullCode.length;function typeHtmlCode(){htmlIndex<htmlFullCode.length?(htmlTypedCode+=htmlFullCode[htmlIndex],htmlCodeDisplay.innerText=htmlTypedCode,hljs.highlightElement(htmlCodeDisplay),showHtmlPreview(),htmlIndex++,setTimeout(typeHtmlCode,htmlTypingSpeed)):setTimeout(resetHtmlTyping,2e3)}function typeJsCode(){jsIndex<jsFullCode.length?(jsTypedCode+=jsFullCode[jsIndex],jsCodeDisplay.innerText=jsTypedCode,hljs.highlightElement(jsCodeDisplay),showJsPreview(),jsIndex++,setTimeout(typeJsCode,jsTypingSpeed)):setTimeout(resetJsTyping,2e3)}function showHtmlPreview(){htmlPreviewDisplay.innerHTML=htmlTypedCode}function showJsPreview(){let e="";const t=jsTypedCode.length/jsFullCode.length;t>.5&&(e+=createConsoleEntry("Task created: 'Set up project repository' (ID: 1)")),t>.6&&(e+=createConsoleEntry("Task created: 'Create wireframes' (ID: 2)")),t>.7&&(e+=createConsoleEntry("Task created: 'Design database schema' (ID: 3)"),e+=createConsoleEntry("Task created: 'Write API documentation' (ID: 4)")),t>.8&&(e+=createConsoleEntry("Task completed: 'Set up project repository' (ID: 1)"),e+=createConsoleEntry("Task completed: 'Create wireframes' (ID: 2)")),t>.9&&(e+=createConsoleEntry("Current stats: {total: 4, active: 2, completed: 2}")),jsPreviewDisplay.innerHTML=e}function createConsoleEntry(e){return`<div class="console-line">\n                        <span class="console-prompt">></span>\n                        <span class="console-message">${e}</span>\n                        <span class="console-time">${(new Date).toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",second:"2-digit"})}</span>\n                    </div>`}function resetHtmlTyping(){htmlIndex=0,htmlTypedCode="",htmlCodeDisplay.innerText="",typeHtmlCode()}function resetJsTyping(){jsIndex=0,jsTypedCode="",jsCodeDisplay.innerText="",typeJsCode()}function toggleSection(e){"html-code"===e?(document.getElementById("html-code-box").classList.add("code-visible"),document.getElementById("html-preview-box").classList.remove("code-visible"),document.querySelectorAll(".nav-btn").forEach((e=>e.classList.remove("active"))),document.querySelector("[onclick=\"toggleSection('html-code')\"]").classList.add("active")):"html-preview"===e?(document.getElementById("html-code-box").classList.remove("code-visible"),document.getElementById("html-preview-box").classList.add("code-visible"),document.querySelectorAll(".nav-btn").forEach((e=>e.classList.remove("active"))),document.querySelector("[onclick=\"toggleSection('html-preview')\"]").classList.add("active")):"js-code"===e?(document.getElementById("js-code-box").classList.add("code-visible"),document.getElementById("js-preview-box").classList.remove("code-visible"),document.querySelectorAll(".nav-btn").forEach((e=>e.classList.remove("active"))),document.querySelector("[onclick=\"toggleSection('js-code')\"]").classList.add("active")):"js-preview"===e&&(document.getElementById("js-code-box").classList.remove("code-visible"),document.getElementById("js-preview-box").classList.add("code-visible"),document.querySelectorAll(".nav-btn").forEach((e=>e.classList.remove("active"))),document.querySelector("[onclick=\"toggleSection('js-preview')\"]").classList.add("active"))}function typeHtmlCode(){htmlIndex<htmlFullCode.length?(htmlTypedCode+=htmlFullCode[htmlIndex],htmlCodeDisplay.innerHTML=htmlTypedCode,hljs.highlightElement(htmlCodeDisplay),showHtmlPreview(),htmlIndex++,setTimeout(typeHtmlCode,htmlTypingSpeed)):setTimeout(resetHtmlTyping,2e3)}function typeJsCode(){jsIndex<jsFullCode.length?(jsTypedCode+=jsFullCode[jsIndex],jsCodeDisplay.innerHTML=jsTypedCode,hljs.highlightElement(jsCodeDisplay),showJsPreview(),jsIndex++,setTimeout(typeJsCode,jsTypingSpeed)):setTimeout(resetJsTyping,2e3)}function resetHtmlTyping(){htmlIndex=0,htmlTypedCode="",htmlCodeDisplay.innerHTML="",typeHtmlCode()}function resetJsTyping(){jsIndex=0,jsTypedCode="",jsCodeDisplay.innerHTML="",typeJsCode()}typeHtmlCode(),typeJsCode();
